// scripts/verifyFundMe.js

async function main() {
  const chainId = (await ethers.provider.getNetwork()).chainId;
  if (chainId !== 11155111) {
    console.log("‚ö†Ô∏è ÂΩìÂâçÁΩëÁªú‰∏çÊòØ SepoliaÔºàchainId: 11155111ÔºâÔºåË∑≥ËøáÂêàÁ∫¶È™åËØÅ„ÄÇ");
    return;
  }
  const apiKey = process.env.ETHERSCAN_API_KEY;
  if (!apiKey) {
    console.log("‚ö†Ô∏è Êú™Ê£ÄÊµãÂà∞ ETHERSCAN_API_KEYÔºåË∑≥ËøáÂêàÁ∫¶È™åËØÅ„ÄÇ");
    return;
  }
  // üîç ÂêàÁ∫¶Âú∞ÂùÄÂíåÊûÑÈÄ†ÂáΩÊï∞ÂèÇÊï∞
  const contractAddress = "0x6BEbd9C82572975020dC08C9F96aDfdc64c37436"; // ÊõøÊç¢‰∏∫ÊÇ®ÁöÑÂêàÁ∫¶Âú∞ÂùÄ
  const lockTime = 30 * 24 * 60 * 60; // 30Â§©Ôºå‰∏éÈÉ®ÁΩ≤Êó∂‰øùÊåÅ‰∏ÄËá¥

  console.log("üîê ÂºÄÂßãÈ™åËØÅÂêàÁ∫¶...");
  console.log("üìç ÂêàÁ∫¶Âú∞ÂùÄ:", contractAddress);
  console.log("üîí ÈîÅÂÆöÊó∂Èó¥:", lockTime, "Áßí");

  try {
    await hre.run("verify:verify", {
      address: contractAddress,
      constructorArguments: [lockTime],
    });
    console.log("‚úÖ ÂêàÁ∫¶È™åËØÅÊàêÂäüÔºÅ");
    console.log("üîó Êü•ÁúãÂêàÁ∫¶: https://sepolia.etherscan.io/address/" + contractAddress);
  } catch (error) {
    if (error.message.includes("Already Verified")) {
      console.log("‚ÑπÔ∏è ÂêàÁ∫¶Â∑≤ÁªèÈ™åËØÅËøá‰∫Ü");
      console.log("üîó Êü•ÁúãÂêàÁ∫¶: https://sepolia.etherscan.io/address/" + contractAddress);
    } else {
      console.log("‚ùå ÂêàÁ∫¶È™åËØÅÂ§±Ë¥•:", error.message);
      console.log("üí° ËØ∑Ê£ÄÊü•:");
      console.log("   1. ÂêàÁ∫¶Âú∞ÂùÄÊòØÂê¶Ê≠£Á°Æ");
      console.log("   2. ÊûÑÈÄ†ÂáΩÊï∞ÂèÇÊï∞ÊòØÂê¶Ê≠£Á°Æ");
      console.log("   3. ÁΩëÁªúËøûÊé•ÊòØÂê¶Ê≠£Â∏∏");
      console.log("   4. Etherscan API ÂØÜÈí•ÊòØÂê¶ÊúâÊïà");
    }
  }
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error("‚ùå Verification failed:", error);
    process.exit(1);
  }); 